{"ast":null,"code":"import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nconst escapeKeyCode = 27;\nconst noop = () => {};\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nconst getRefTarget = ref => ref && ('current' in ref ? ref.current : ref);\n\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose) {\n  let {\n    disabled,\n    clickTrigger = 'click'\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const preventMouseRootCloseRef = useRef(false);\n  const onClose = onRootClose || noop;\n  const handleMouseCapture = useCallback(e => {\n    const currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'RootClose captured a close event but does not have a ref to compare it to. ' + 'useRootClose(), should be passed a ref that resolves to a DOM node');\n    preventMouseRootCloseRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target);\n  }, [ref]);\n  const handleMouse = useEventCallback(e => {\n    if (!preventMouseRootCloseRef.current) {\n      onClose(e);\n    }\n  });\n  const handleKeyUp = useEventCallback(e => {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(() => {\n    if (disabled || ref == null) return undefined; // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    let currentEvent = window.event;\n    const doc = ownerDocument(getRefTarget(ref)); // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n    const removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    const removeMouseListener = listen(doc, clickTrigger, e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n      handleMouse(e);\n    });\n    const removeKeyupListener = listen(doc, 'keyup', e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n      handleKeyUp(e);\n    });\n    let mobileSafariHackListeners = [];\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(el => listen(el, 'mousemove', noop));\n    }\n    return () => {\n      removeMouseCaptureListener();\n      removeMouseListener();\n      removeKeyupListener();\n      mobileSafariHackListeners.forEach(remove => remove());\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleMouse, handleKeyUp]);\n}\nexport default useRootClose;","map":{"version":3,"names":["contains","listen","ownerDocument","useCallback","useEffect","useRef","useEventCallback","warning","escapeKeyCode","noop","isLeftClickEvent","event","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","getRefTarget","ref","current","useRootClose","onRootClose","disabled","clickTrigger","arguments","length","undefined","preventMouseRootCloseRef","onClose","handleMouseCapture","e","currentTarget","target","handleMouse","handleKeyUp","keyCode","currentEvent","window","doc","removeMouseCaptureListener","removeMouseListener","removeKeyupListener","mobileSafariHackListeners","documentElement","slice","call","body","children","map","el","forEach","remove"],"sources":["C:/Users/karmo/Downloads/Ecommerce Website/MERN-Ecommerce-main/frontend/node_modules/@restart/ui/esm/useRootClose.js"],"sourcesContent":["import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nconst escapeKeyCode = 27;\n\nconst noop = () => {};\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst getRefTarget = ref => ref && ('current' in ref ? ref.current : ref);\n\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose, {\n  disabled,\n  clickTrigger = 'click'\n} = {}) {\n  const preventMouseRootCloseRef = useRef(false);\n  const onClose = onRootClose || noop;\n  const handleMouseCapture = useCallback(e => {\n    const currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'RootClose captured a close event but does not have a ref to compare it to. ' + 'useRootClose(), should be passed a ref that resolves to a DOM node');\n    preventMouseRootCloseRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target);\n  }, [ref]);\n  const handleMouse = useEventCallback(e => {\n    if (!preventMouseRootCloseRef.current) {\n      onClose(e);\n    }\n  });\n  const handleKeyUp = useEventCallback(e => {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(() => {\n    if (disabled || ref == null) return undefined; // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    let currentEvent = window.event;\n    const doc = ownerDocument(getRefTarget(ref)); // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n    const removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    const removeMouseListener = listen(doc, clickTrigger, e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleMouse(e);\n    });\n    const removeKeyupListener = listen(doc, 'keyup', e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleKeyUp(e);\n    });\n    let mobileSafariHackListeners = [];\n\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(el => listen(el, 'mousemove', noop));\n    }\n\n    return () => {\n      removeMouseCaptureListener();\n      removeMouseListener();\n      removeKeyupListener();\n      mobileSafariHackListeners.forEach(remove => remove());\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleMouse, handleKeyUp]);\n}\n\nexport default useRootClose;"],"mappings":"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"},"metadata":{},"sourceType":"module"}