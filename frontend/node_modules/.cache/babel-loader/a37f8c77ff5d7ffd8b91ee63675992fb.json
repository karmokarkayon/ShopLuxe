{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karmo\\\\Downloads\\\\Ecommerce Website\\\\MERN-Ecommerce-main\\\\frontend\\\\src\\\\pages\\\\ConfirmPage.js\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { confirmUser } from '../actions/userActions';\nimport Meta from '../components/Meta';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmPage = _ref => {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  const dispatch = useDispatch();\n  const userConfirm = useSelector(state => state.userConfirm); // get the userInfo to check if user is confirmed or not\n  const {\n    loading,\n    error,\n    isConfirmed\n  } = userConfirm;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    if (userInfo) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, []);\n  useEffect(() => {\n    // confirm user once the email token is available\n    dispatch(confirmUser(match.params.token, isLoggedIn));\n  }, [dispatch, match, isLoggedIn]);\n  if (loading || !isConfirmed && !error) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this);\n  } else if (error) {\n    // redirect to login page after a 10 seconds\n    setTimeout(() => {\n      history.push('/login');\n    }, 10000);\n    return /*#__PURE__*/_jsxDEV(Message, {\n      dismissible: true,\n      variant: \"danger\",\n      duration: 10,\n      children: \"Verfication Failed. Please try to login again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this);\n  } else if (isConfirmed) {\n    // set a variable in local storage to fill email aftrer redirecting to login page after email confirmation\n    localStorage.setItem('fillEmailOnLoginPage', 'true');\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        border: 'none',\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Meta, {\n        title: \"Confirm Password | Kosells\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Account Confirmed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: setIsLoggedIn ? 'Your account has been successfully verified! Go on and shop for the best deals of the day!' : `Your account has been successfully verified! Please\n\t\t\t\t\t\tlogin and start exploring the best deals on all your\n\t\t\t\t\t\tfavorite products.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), !setIsLoggedIn ? /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this);\n  }\n};\n_s(ConfirmPage, \"fC5xXvy+swmGZ3y+bz0FSAl7hRM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = ConfirmPage;\nexport default ConfirmPage;\nvar _c;\n$RefreshReg$(_c, \"ConfirmPage\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","Link","Card","Loader","Message","confirmUser","Meta","jsxDEV","_jsxDEV","ConfirmPage","_ref","_s","match","history","dispatch","userConfirm","state","loading","error","isConfirmed","userLogin","userInfo","isLoggedIn","setIsLoggedIn","params","token","fileName","_jsxFileName","lineNumber","columnNumber","setTimeout","push","dismissible","variant","duration","children","localStorage","setItem","style","border","margin","title","Body","Title","Text","to","_c","$RefreshReg$"],"sources":["C:/Users/karmo/Downloads/Ecommerce Website/MERN-Ecommerce-main/frontend/src/pages/ConfirmPage.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { confirmUser } from '../actions/userActions';\nimport Meta from '../components/Meta';\n\nconst ConfirmPage = ({ match, history }) => {\n\tconst dispatch = useDispatch();\n\tconst userConfirm = useSelector((state) => state.userConfirm); // get the userInfo to check if user is confirmed or not\n\tconst { loading, error, isConfirmed } = userConfirm;\n\n\tconst userLogin = useSelector((state) => state.userLogin);\n\tconst { userInfo } = userLogin;\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (userInfo) {\n\t\t\tsetIsLoggedIn(true);\n\t\t} else {\n\t\t\tsetIsLoggedIn(false);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// confirm user once the email token is available\n\t\tdispatch(confirmUser(match.params.token, isLoggedIn));\n\t}, [dispatch, match, isLoggedIn]);\n\n\tif (loading || (!isConfirmed && !error)) {\n\t\treturn <Loader />;\n\t} else if (error) {\n\t\t// redirect to login page after a 10 seconds\n\t\tsetTimeout(() => {\n\t\t\thistory.push('/login');\n\t\t}, 10000);\n\t\treturn (\n\t\t\t<Message dismissible variant='danger' duration={10}>\n\t\t\t\tVerfication Failed. Please try to login again.\n\t\t\t</Message>\n\t\t);\n\t} else if (isConfirmed) {\n\t\t// set a variable in local storage to fill email aftrer redirecting to login page after email confirmation\n\t\tlocalStorage.setItem('fillEmailOnLoginPage', 'true');\n\t\treturn (\n\t\t\t<Card style={{ border: 'none', margin: '0 auto' }}>\n\t\t\t\t<Meta title='Confirm Password | Kosells' />\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title>Account Confirmed</Card.Title>\n\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t{setIsLoggedIn\n\t\t\t\t\t\t\t? 'Your account has been successfully verified! Go on and shop for the best deals of the day!'\n\t\t\t\t\t\t\t: `Your account has been successfully verified! Please\n\t\t\t\t\t\tlogin and start exploring the best deals on all your\n\t\t\t\t\t\tfavorite products.`}\n\t\t\t\t\t</Card.Text>\n\t\t\t\t\t{!setIsLoggedIn ? <Link to='/login'>Login</Link> : null}\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t);\n\t}\n};\n\nexport default ConfirmPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGC,IAAA,IAAwB;EAAAC,EAAA;EAAA,IAAvB;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EACtC,MAAMI,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,WAAW,GAAGhB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACD,WAAW,CAAC,CAAC,CAAC;EAC/D,MAAM;IAAEE,OAAO;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGJ,WAAW;EAEnD,MAAMK,SAAS,GAAGrB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACI,SAAS,CAAC;EACzD,MAAM;IAAEC;EAAS,CAAC,GAAGD,SAAS;EAC9B,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACf,IAAIuB,QAAQ,EAAE;MACbE,aAAa,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACNA,aAAa,CAAC,KAAK,CAAC;IACrB;EACD,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM;IACf;IACAgB,QAAQ,CAACT,WAAW,CAACO,KAAK,CAACY,MAAM,CAACC,KAAK,EAAEH,UAAU,CAAC,CAAC;EACtD,CAAC,EAAE,CAACR,QAAQ,EAAEF,KAAK,EAAEU,UAAU,CAAC,CAAC;EAEjC,IAAIL,OAAO,IAAK,CAACE,WAAW,IAAI,CAACD,KAAM,EAAE;IACxC,oBAAOV,OAAA,CAACL,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClB,CAAC,MAAM,IAAIX,KAAK,EAAE;IACjB;IACAY,UAAU,CAAC,MAAM;MAChBjB,OAAO,CAACkB,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC,EAAE,KAAK,CAAC;IACT,oBACCvB,OAAA,CAACJ,OAAO;MAAC4B,WAAW;MAACC,OAAO,EAAC,QAAQ;MAACC,QAAQ,EAAE,EAAG;MAAAC,QAAA,EAAC;IAEpD;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAEZ,CAAC,MAAM,IAAIV,WAAW,EAAE;IACvB;IACAiB,YAAY,CAACC,OAAO,CAAC,sBAAsB,EAAE,MAAM,CAAC;IACpD,oBACC7B,OAAA,CAACN,IAAI;MAACoC,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAAL,QAAA,gBACjD3B,OAAA,CAACF,IAAI;QAACmC,KAAK,EAAC;MAA4B;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3CrB,OAAA,CAACN,IAAI,CAACwC,IAAI;QAAAP,QAAA,gBACT3B,OAAA,CAACN,IAAI,CAACyC,KAAK;UAAAR,QAAA,EAAC;QAAiB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC1CrB,OAAA,CAACN,IAAI,CAAC0C,IAAI;UAAAT,QAAA,EACRZ,aAAa,GACX,4FAA4F,GAC3F;AACV;AACA;QAAyB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,EACX,CAACN,aAAa,gBAAGf,OAAA,CAACP,IAAI;UAAC4C,EAAE,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,GAAG,IAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAET;AACD,CAAC;AAAClB,EAAA,CAtDIF,WAAW;EAAA,QACCT,WAAW,EACRD,WAAW,EAGbA,WAAW;AAAA;AAAA+C,EAAA,GALxBrC,WAAW;AAwDjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}